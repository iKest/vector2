<?xml version="1.0" encoding="UTF-8"?>
<Root>
    <Objects>
        <Object Name="Item_Empty" X="0" Y="0" />
        <Object Name="Item_Exchange_Coin" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="~CoinType" X="0" Y="0" Z="18" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="~CoinSize" B="0" C="0" D="~CoinSize" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheCoin_low" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="1" />
                                    <SetVariable Name="$Node" Type="Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Currency" Value="None" />
                                    <SetVariable Name="CurrencyType" Value="~CurrencyType" />
                                    <SetVariable Name="CashEV" Value="~CoinValueEV" />
                                    <SetVariable Name="CashD" Value="~CoinValueDeviation" />
                                    <SetVariable Name="Cash1" Value="{(1-_CashD) * _CashEV}" />
                                    <SetVariable Name="Cash2" Value="{(1+_CashD) * _CashEV}" />
                                    <SetVariable Name="CashResult" Value="0" />
                                    <SetVariable Name="CashCounter" Value="MaxMoney" />
                                    <SetVariable Name="Adder" Value="{?getCounter[PassiveEffects,AddTokens] + ?getCounter[PassiveEffects,AddTokensAfterCharge]}" />
                                    <SetVariable Name="Multiplier" Value="{?getCounter[PassiveEffects,TokensAddPercentage] + ?getCounter[PassiveEffects,TokensAddPercentageAfterCharge]}" />
                                    <SetVariable Name="TextColor" Value="#E56D00FF" />
                                    <SetVariable Name="TextSize" Value="150" />
                                    <SetVariable Name="IconImage" Value="~CurrencyIcon" />
                                    <SetVariable Name="IconImageWidth" Value="200" />
                                    <SetVariable Name="IconImageHeight" Value="200" />
                                    <SetVariable Name="IconImageColor" Value="~CurrencyColor" />
                                    <SetVariable Name="PointsTextDelay" Value="0" />
                                    <SetVariable Name="first_Sound" Value="~sound_1" />
                                    <SetVariable Name="first_Volume" Value="1" />
                                    <SetVariable Name="second_Sound" Value="~sound_2" />
                                    <SetVariable Name="second_Volume" Value="1" />
                                    <SetVariable Name="third_Sound" Value="~sound_3" />
                                    <SetVariable Name="third_Volume" Value="1" />
                                    <SetVariable Name="ShiftY" Value="-200" />
                                    <SetVariable Name="StatisticsCounter" Value="~CoinType" />
                                    <SetVariable Name="PassiveActivateSignal" Value="GotToken" />
                                </Init>
                                <Loop Template="CurrencyService.CoinLauncher" />
                                <Loop Template="CurrencyService.PlaySound" />
                                <Loop Template="CurrencyService.Kill" />
                                <Loop Template="CurrencyService.ShowCurrencyIncome" />
                                <Loop Template="GiveMeMyCurrency.AddQuantityCommon" />
                                <Loop Template="GiveMeMyCurrency.AddQuantityRaw" />
                                <Loop Template="GiveMeMyCurrency.CoinLoop" />
                                <Loop Template="GiveMeMyCurrency.RedCoinLoop" />
                                <Loop Template="GiveMeMyCurrency.RedCoinSwarmDisable" />
                                <Loop Template="GiveMeMyCurrency.TriggerOff" />
                                <Loop Template="GiveMeMyCurrency.WriteStatistics" />
                                <Loop Template="GiveMeMyCurrency.CheckMoney2Achievement" />
                                <Loop Name="CountForEMPMagnetSynergyMission">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="AddCurrency" />
                                        <Equal Value1="_CurrencyType" Value2="Money" />
                                        <Equal Value1="?getCounter[Temp,EMPMagnet]" Value2="1" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[MissionProgress,EMPMagnet]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,EMPMagnetTokens]" Value="_CashResult" />
                                    </Actions>
                                </Loop>
                                <Loop Name="CountForTeleportEMPMagnetSynergyMission">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="AddCurrency" />
                                        <Equal Value1="_CurrencyType" Value2="Money" />
                                        <Equal Value1="?getCounter[Temp,TeleportEMPMagnet]" Value2="1" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportEMPMagnet]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportEMPMagnetTokens]" Value="_CashResult" />
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportMagnet]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportMagnetTokens]" Value="_CashResult" />
                                        <AppendValue Name="?getCounter[MissionProgress,EMPMagnet]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,EMPMagnetTokens]" Value="_CashResult" />
                                    </Actions>
                                </Loop>
                                <Loop Name="CountForTeleportMagnetSynergyMission">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="AddCurrency" />
                                        <Equal Value1="_CurrencyType" Value2="Money" />
                                        <Equal Value1="?getCounter[PassiveEffects,JustTeleported]" Value2="1" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportMagnet]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,TeleportMagnetTokens]" Value="_CashResult" />
                                    </Actions>
                                </Loop>
                                <Loop Name="CountForAfterTrapsMission">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="AddCurrency" />
                                        <Equal Value1="_CurrencyType" Value2="Money" />
                                        <Operator Type="Or">
                                            <Greater Value1="?getCounter[PassiveEffects,AddTokensAfterCharge]" Value2="0" />
                                            <Greater Value1="?getCounter[PassiveEffects,TokensAddPercentageAfterCharge]" Value2="0" />
                                        </Operator>
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[MissionProgress,AfterTrapCoins]" Value="1" />
                                        <AppendValue Name="?getCounter[MissionProgress,AfterTrapTokens]" Value="_CashResult" />
                                    </Actions>
                                </Loop>
                                <Loop Name="CountItemDropMission">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="AddCurrency" />
                                        <Equal Value1="_CurrencyType" Value2="MoneyPremium" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[MissionProgress,ItemDrop]" Value="1" />
                                    </Actions>
                                </Loop>
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                        <Trigger Name="EnterCounter" X="-500" Y="-500" Width="1000" Height="1000" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsEnterCounterActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                    <SetVariable Name="CoinType" Value="~CoinType" />
                                </Init>
                                <Loop Name="Enter">
                                    <Events>
                                        <Enter />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_CoinType" Value2="Coin" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[ST_Statistics_Per_Floor, CoinsCollectable]" Value="1" />
                                        <SetVariable Name="$Active" Value="0" />
                                    </Actions>
                                </Loop>
                                <Loop Name="Enter">
                                    <Events>
                                        <Enter />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_CoinType" Value2="SuperCoin" />
                                    </Conditions>
                                    <Actions>
                                        <AppendValue Name="?getCounter[ST_Statistics_Per_Floor, RedCoinsCollectable]" Value="1" />
                                        <SetVariable Name="$Active" Value="0" />
                                    </Actions>
                                </Loop>
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Static>
                            <Enable Value="~Active" />
                        </Static>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                            <Transformation Name="ItemOn">
                                <ActivationInterval Type="On" />
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
                <Trigger Name="Switcher" X="0" Y="0" Width="1" Height="1">
                    <Content>
                        <Init>
                            <SetVariable Name="$AI" Type="AI" Value="0" />
                            <SetVariable Name="$Active" Type="Bool" Value="1" />
                            <SetVariable Name="$Node" Type="Node" Value="COM" />
                            <SetVariable Name="Deactivated" Type="Bool" Value="0" />
                        </Init>
                        <Loop Name="Switcher">
                            <Events>
                                <ActivateNearPlayer />
                            </Events>
                            <Conditions>
                                <Equal Value1="_$ActionID" Value2="TrapsOff" />
                                <Equal Value1="~DeadCoin" Value2="1" />
                                <Equal Value1="_Deactivated" Value2="0" />
                                <Greater Value1="?getCounter[PassiveEffects, Magnetizer]" Value2="0" />
                            </Conditions>
                            <Actions>
                                <Wait Frames="?max[{2 + ?getModel[Player].localPositionX*0.014},{2 - ?getModel[Player].localPositionX*0.014}]" />
                                <Transform Name="ItemOn" />
                                <Transform Name="PullItem" />
                            </Actions>
                        </Loop>
                        <Loop Name="KillIfKillCheck">
                            <Events>
                                <Activate />
                            </Events>
                            <Conditions>
                                <Equal Value1="~KillOnKillCheck" Value2="1" />
                                <Equal Value1="_$ActionID" Value2="kill_check" />
                            </Conditions>
                            <Actions>
                                <SetVariable Name="Deactivated" Value="1" />
                            </Actions>
                        </Loop>
                    </Content>
                </Trigger>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Variable Name="CurrencyIcon" Default="common.money2_icon" />
                        <Variable Name="CurrencyColor" Default="orange" />
                        <Variable Name="CurrencyType" Default="Money" />
                        <Variable Name="CoinValueDeviation" Default="0.2" />
                        <Variable Name="CoinValueEV" Default="10" />
                        <Variable Name="CoinType" Default="Coin" />
                        <Variable Name="CoinSize" Default="15" />
                        <Variable Name="Active" Default="1" />
                        <Variable Name="DeadCoin" Default="0" />
                        <Variable Name="KillOnKillCheck" Default="0" />
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="IsEnterCounterActive" Value="?max[?getCounter[ST_CurrentMissions,Magnet],?getCounter[ST_CurrentMissions,RedCoinsCount]]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="sound_1" Value="?switch[~CurrencyType, MoneyPremium: red_chip, money1]" />
                        <Expression Name="sound_2" Value="?switch[~CurrencyType, MoneyPremium: red_chip, money2]" />
                        <Expression Name="sound_3" Value="?switch[~CurrencyType, MoneyPremium: red_chip, money3]" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Key" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="~KeyType" X="0" Y="0" Z="18" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="10" B="0" C="0" D="10" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheKey" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="1" />
                                    <SetVariable Name="$Node" Type="Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Key" Value="None" />
                                    <SetVariable Name="#PowerUp" Value="None" />
                                    <SetVariable Name="#Gadget" Value="None" />
                                    <SetVariable Name="KeyLevel" Value="~KeyLevel" />
                                    <SetVariable Name="KeyType" Value="~KeyType" />
                                    <SetVariable Name="Sound" Value="key1" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="~KeyType" />
                                </Init>
                                <Template Name="GiveMeMyKey" />
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Variable Name="KeyColor" Default="#0000FFFF" />
                        <Variable Name="KeyLevel" Default="Blue" />
                        <Variable Name="KeyType" Default="Key_blue" />
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Coupon" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="~CouponType" X="0" Y="0" Z="18" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="70" B="0" C="0" D="70" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetCoupon" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="1" />
                                    <SetVariable Name="$Node" Type="Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Currency" Value="Coupons" />
                                    <SetVariable Name="CouponType" Value="~CouponType" />
                                    <SetVariable Name="CashEV" Value="~ValueEV" />
                                    <SetVariable Name="Cash1" Value="{1 * _CashEV}" />
                                    <SetVariable Name="Cash2" Value="{1 * _CashEV}" />
                                    <SetVariable Name="CashResult" Value="1" />
                                    <SetVariable Name="TextColor" Value="#41C5E2FF" />
                                    <SetVariable Name="TextSize" Value="118" />
                                    <SetVariable Name="IconImage" Value="~CouponImage" />
                                    <SetVariable Name="IconImageWidth" Value="117" />
                                    <SetVariable Name="IconImageHeight" Value="117" />
                                    <SetVariable Name="IconImageColor" Value="~IconImageColor" />
                                    <SetVariable Name="PointsTextDelay" Value="0" />
                                    <SetVariable Name="first_Sound" Value="money1" />
                                    <SetVariable Name="first_Volume" Value="1" />
                                    <SetVariable Name="second_Sound" Value="money2" />
                                    <SetVariable Name="second_Volume" Value="1" />
                                    <SetVariable Name="third_Sound" Value="money3" />
                                    <SetVariable Name="third_Volume" Value="1" />
                                    <SetVariable Name="ShiftY" Value="-100" />
                                    <SetVariable Name="StatisticsCounter" Value="~CouponType" />
                                    <SetVariable Name="PassiveActivateSignal" Value="GotCoupon" />
                                </Init>
                                <Loop Template="CurrencyService.CoinLauncher" />
                                <Loop Template="CurrencyService.PlaySound" />
                                <Loop Template="CurrencyService.Kill" />
                                <Loop Template="CurrencyService.ShowCurrencyIncome" />
                                <Loop Template="GiveMeMyCoupon.AddQuantity" />
                                <Loop Template="GiveMeMyCoupon.TriggerOff" />
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Variable Name="ValueEV" Default="1" />
                        <Variable Name="CouponType" Default="Reroll" />
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Boosterpack" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="Boosterpack" X="0" Y="0" Z="18" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="15" B="0" C="0" D="15" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheBoosterpack" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Boosterpack" Value="None" />
                                    <SetVariable Name="Sound" Value="booster_pick" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="boosterpack" />
                                    <SetVariable Name="Text" Value="^Run.Boosterpack.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Template Name="GiveMeMyBoosterpack" />
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_MemoryUnit" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="MemoryUnit" X="5" Y="0" Z="18" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="10" B="0" C="0" D="10" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheMemoryUnit" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#MemoryUnit" Value="None" />
                                    <SetVariable Name="Sound" Value="red_chip" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="memoryunit" />
                                    <SetVariable Name="Text" Value="^Run.MemoryUnit.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Template Name="GiveMeMyMemoryUnit" />
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Note" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="~NoteType" X="0" Y="0" Z="17" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="-45" B="0" C="0" D="-45" Tx="0" Ty="0" />
                                    <StartColor Color="#FF0000FF" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheNote" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Note" Value="None" />
                                    <SetVariable Name="Sound" Value="red_chip" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="note" />
                                    <SetVariable Name="Text" Value="^Run.Note.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Template Name="GiveMeMyNote" />
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Variable Name="NoteType" Default="Note_yellow" />
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_FileKey" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="CryptoKey" X="0" Y="0" Z="17" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="0.35" B="0" C="0" D="0.35" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheFileKey" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Item" Value="None" />
                                    <SetVariable Name="Sound" Value="booster_pick" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="FileKey" />
                                    <SetVariable Name="Text" Value="^Run.FileKey.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Loop>
                                    <Events>
                                        <Enter />
                                    </Events>
                                    <Actions>
                                        <SetVariable Name="$Active" Value="0" />
                                        <Activate ActionID="GotUnit" />
                                    </Actions>
                                </Loop>
                                <Loop Name="AddQuantity">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="GotUnit" />
                                    </Conditions>
                                    <Actions>
                                        <SetVariable Name="?getString[Arg0]" Value="FileKey" />
                                        <AddItem Result="_#Item" Preset="dcard" />
                                        <Sound Name="_Sound" Volume="_Volume" DuckEffect="1" />
                                        <AppendValue Name="?getCounter[FileKeys,KeysCollected]" Value="1" />
                                        <ExecuteCall Message="FileKeys" />
                                    </Actions>
                                </Loop>
                                <Loop Name="WriteStatistics">
                                    <Events Template="FreqUsed.Enter" />
                                    <Conditions Template="Statistics.WriteItemsCollected" />
                                    <Actions Template="Statistics.WriteItemsCollected" />
                                </Loop>
                                <Loop Name="Jump">
                                    <Using>
                                        <Variable Name="Text" DefaultValue="^Run.FileKey.FloatingText^" Type="String" />
                                        <Variable Name="TextColor" DefaultValue="#000000FF" Type="String" />
                                        <Variable Name="TextSize" DefaultValue="110" Type="Int" />
                                    </Using>
                                    <Events Template="FreqUsed.Enter" />
                                    <Actions>
                                        <Transform Name="ItemDisappear" />
                                    </Actions>
                                </Loop>
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Fuze" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="Fuze" X="0" Y="0" Z="17" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="0.35" B="0" C="0" D="0.35" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheFuze" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Item" Value="None" />
                                    <SetVariable Name="Sound" Value="booster_pick" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="Fuze" />
                                    <SetVariable Name="Text" Value="^Run.Fuze.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Loop>
                                    <Events>
                                        <Enter />
                                    </Events>
                                    <Actions>
                                        <SetVariable Name="$Active" Value="0" />
                                        <Activate ActionID="GotUnit" />
                                    </Actions>
                                </Loop>
                                <Loop Name="AddQuantity">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="GotUnit" />
                                    </Conditions>
                                    <Actions>
                                        <SetVariable Name="?getString[Arg0]" Value="Fuze" />
                                        <AddItem Result="_#Item" Preset="dcard" />
                                        <Sound Name="_Sound" Volume="_Volume" DuckEffect="1" />
                                        <AppendValue Name="?getCounter[FindFuze,Found]" Value="1" />
                                    </Actions>
                                </Loop>
                                <Loop Name="WriteStatistics">
                                    <Events Template="FreqUsed.Enter" />
                                    <Conditions Template="Statistics.WriteItemsCollected" />
                                    <Actions Template="Statistics.WriteItemsCollected" />
                                </Loop>
                                <Loop Name="Jump">
                                    <Using>
                                        <Variable Name="Text" DefaultValue="^Run.Fuze.FloatingText^" Type="String" />
                                        <Variable Name="TextColor" DefaultValue="#000000FF" Type="String" />
                                        <Variable Name="TextSize" DefaultValue="110" Type="Int" />
                                    </Using>
                                    <Events Template="FreqUsed.Enter" />
                                    <Actions>
                                        <Transform Name="ItemDisappear" />
                                    </Actions>
                                </Loop>
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Item_Exchange_Reagent" X="0" Y="0">
            <Content>
                <Object Name="Position_Wrapper" X="100" Y="70">
                    <Content>
                        <UnityModel Name="Reagent" X="0" Y="0" Z="17" Layer="Items" Width="1200" Height="1200" Factor="0">
                            <Properties>
                                <Static>
                                    <Matrix A="0.34" B="0" C="0" D="0.34" Tx="0" Ty="0" />
                                </Static>
                            </Properties>
                        </UnityModel>
                        <Trigger Name="GetTheReagent" X="-41" Y="-41" Width="82" Height="82" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Value="0" />
                                    <SetVariable Name="$Active" Value="1" />
                                    <SetVariable Name="$Node" Value="NTop|NChest|NPivot|NKnuckles_1|NKnuckles_2|NToe_1|NToe_2" />
                                    <SetVariable Name="#Item" Value="None" />
                                    <SetVariable Name="Sound" Value="booster_pick" />
                                    <SetVariable Name="Volume" Value="1" />
                                    <SetVariable Name="StatisticsCounter" Value="Reagent" />
                                    <SetVariable Name="Text" Value="^Run.Reagent.FloatingText^" />
                                    <SetVariable Name="TextColor" Value="#000000FF" />
                                    <SetVariable Name="TextSize" Value="110" />
                                </Init>
                                <Loop>
                                    <Events>
                                        <Enter />
                                    </Events>
                                    <Actions>
                                        <SetVariable Name="$Active" Value="0" />
                                        <Activate ActionID="GotUnit" />
                                    </Actions>
                                </Loop>
                                <Loop Name="AddQuantity">
                                    <Events>
                                        <Activate />
                                    </Events>
                                    <Conditions>
                                        <Equal Value1="_$ActionID" Value2="GotUnit" />
                                    </Conditions>
                                    <Actions>
                                        <SetVariable Name="?getString[Arg0]" Value="Reagent" />
                                        <AddItem Result="_#Item" Preset="dcard" />
                                        <Sound Name="_Sound" Volume="_Volume" DuckEffect="1" />
                                        <AppendValue Name="?getCounter[FindCapsules,CapsulesCount]" Value="1" />
                                        <ExecuteCall Message="FindCapsules" />
                                    </Actions>
                                </Loop>
                                <Loop Name="WriteStatistics">
                                    <Events Template="FreqUsed.Enter" />
                                    <Conditions Template="Statistics.WriteItemsCollected" />
                                    <Actions Template="Statistics.WriteItemsCollected" />
                                </Loop>
                                <Loop Name="Jump">
                                    <Using>
                                        <Variable Name="Text" DefaultValue="^Run.Fuze.FloatingText^" Type="String" />
                                        <Variable Name="TextColor" DefaultValue="#000000FF" Type="String" />
                                        <Variable Name="TextSize" DefaultValue="110" Type="Int" />
                                    </Using>
                                    <Events Template="FreqUsed.Enter" />
                                    <Actions>
                                        <Transform Name="ItemDisappear" />
                                    </Actions>
                                </Loop>
                            </Content>
                        </Trigger>
                        <Trigger Name="Magnetizer" X="~TriggerShiftX" Y="~TriggerShiftY" Width="~TriggerWidth" Height="~TriggerHeight" Type="Circle">
                            <Content>
                                <Init>
                                    <SetVariable Name="$AI" Type="AI" Value="0" />
                                    <SetVariable Name="$Active" Type="Bool" Value="~IsMagnitizerActive" />
                                    <SetVariable Name="$Node" Type="Node" Value="COM" />
                                </Init>
                                <Template Name="Magnetizer" />
                            </Content>
                        </Trigger>
                    </Content>
                    <Properties>
                        <Dynamic>
                            <Transformation Name="PullItem">
                                <ToPlayerInterval Frames="~MagnetizerFrames" />
                            </Transformation>
                            <Transformation Name="ItemDisappear">
                                <SizeInterval Frames="10">
                                    <Point W="1" H="1" />
                                    <Point W="0" H="0" />
                                </SizeInterval>
                            </Transformation>
                        </Dynamic>
                    </Properties>
                </Object>
            </Content>
            <Properties>
                <Static>
                    <ContentVariable>
                        <Expression Name="IsMagnitizerActive" Value="?switch[?getCounter[PassiveEffects,MagnetizerFrames], 0: 0, 1]" />
                        <Expression Name="MagnetizerFrames" Value="?getCounter[PassiveEffects,MagnetizerFrames]" />
                        <Expression Name="TriggerWidth" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerHeight" Value="?getCounter[PassiveEffects, MagnetizerRadius]" />
                        <Expression Name="TriggerShiftX" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                        <Expression Name="TriggerShiftY" Value="{- ?getCounter[PassiveEffects, MagnetizerRadius]/2}" />
                    </ContentVariable>
                </Static>
            </Properties>
        </Object>
        <Object Name="Tetrahedron" X="0" Y="0">
            <Content>
                <UnityModel Name="Tetraedr" X="59" Y="30" Z="17" Layer="Items" Width="1200" Height="1200" Factor="0">
                    <Properties>
                        <Static>
                            <Matrix A="1.5" B="0" C="0" D="1.5" Tx="0" Ty="0" />
                            <StartColor Color="#FF0000FF" />
                        </Static>
                    </Properties>
                </UnityModel>
            </Content>
            <Properties>
                <Dynamic>
                    <Transformation Name="ItemDisappear">
                        <SizeInterval Frames="10">
                            <Point W="1" H="1" />
                            <Point W="0" H="0" />
                        </SizeInterval>
                    </Transformation>
                </Dynamic>
            </Properties>
        </Object>
    </Objects>
</Root>